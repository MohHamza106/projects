// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using entity_framework.entity;

#nullable disable

namespace entity_framework.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20250311151149_work betwwen emp and dept")]
    partial class workbetwwenempanddept
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("entity_framework.Models.Department", b =>
                {
                    b.Property<int>("depId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("depId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("alex")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(10)
                        .HasColumnType("varchar")
                        .HasColumnName("deptNAme");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("int ");

                    b.Property<int>("manger_id")
                        .HasColumnType("int");

                    b.HasKey("depId");

                    b.HasIndex("manger_id")
                        .IsUnique();

                    b.ToTable("department", (string)null);
                });

            modelBuilder.Entity("entity_framework.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasDefaultValue("monsoure")
                        .HasColumnName("Employeeadress");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dep_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("dep_id");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("entity_framework.Models.Department", b =>
                {
                    b.HasOne("entity_framework.Models.Employee", "manger")
                        .WithOne("manger_department")
                        .HasForeignKey("entity_framework.Models.Department", "manger_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("manger");
                });

            modelBuilder.Entity("entity_framework.Models.Employee", b =>
                {
                    b.HasOne("entity_framework.Models.Department", "EMployeeDepatment")
                        .WithMany("employees")
                        .HasForeignKey("dep_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("entity_framework.Models.Address", "empaddress", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("country")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("id")
                                .HasColumnType("int");

                            b1.Property<string>("street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employee");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.Navigation("EMployeeDepatment");

                    b.Navigation("empaddress")
                        .IsRequired();
                });

            modelBuilder.Entity("entity_framework.Models.Department", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("entity_framework.Models.Employee", b =>
                {
                    b.Navigation("manger_department");
                });
#pragma warning restore 612, 618
        }
    }
}
